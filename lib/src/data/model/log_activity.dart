import 'dart:convert';

import 'package:flutter/foundation.dart';

class LogActivity {
  final String id; //autogenerated
  final Map<String, dynamic> location;
  final DateTime loged_at;
  final String type;
  LogActivity({
    this.id,
    @required this.location,
    @required this.loged_at,
    @required this.type,
  });

  LogActivity copyWith({
    String id,
    Map<String, dynamic> location,
    DateTime loged_at,
    String type,
  }) {
    return LogActivity(
      id: id ?? this.id,
      location: location ?? this.location,
      loged_at: loged_at ?? this.loged_at,
      type: type ?? this.type,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'location': location,
      'loged_at': loged_at.millisecondsSinceEpoch,
      'type': type,
    };
  }

  factory LogActivity.fromMap(Map<String, dynamic> map) {
    return LogActivity(
      id: map['id'],
      location: Map<String, dynamic>.from(map['location']),
      loged_at: DateTime.fromMillisecondsSinceEpoch(map['loged_at']),
      type: map['type'],
    );
  }

  String toJson() => json.encode(toMap());

  factory LogActivity.fromJson(String source) =>
      LogActivity.fromMap(json.decode(source));

  @override
  String toString() {
    return 'LogActivity(id: $id, location: $location, loged_at: $loged_at, type: $type)';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;

    return other is LogActivity &&
        other.id == id &&
        mapEquals(other.location, location) &&
        other.loged_at == loged_at &&
        other.type == type;
  }

  @override
  int get hashCode {
    return id.hashCode ^ location.hashCode ^ loged_at.hashCode ^ type.hashCode;
  }
}
